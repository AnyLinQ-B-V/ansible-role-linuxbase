---
# tasks file for linuxbase

- name: Check python interpreter
  ansible.builtin.set_fact:
    ansible_python_interpreter: "{{ check_python_interpreter[ansible_distribution | lower][ansible_distribution_major_version] 
    | default(check_python_interpreter.other) }}"
  when: >
    (ansible_python_interpreter is undefined and interpreter_python is undefined) or
    (ansible_python_interpreter is defined and ansible_python_interpreter !=
    check_python_interpreter[ansible_distribution | lower][ansible_distribution_major_version]
    | default(check_python_interpreter.other)) or
    (interpreter_python is defined and interpreter_python
    != check_python_interpreter[ansible_distribution | lower][ansible_distribution_major_version]
    | default(check_python_interpreter.other))
  tags: [always]

- name: Get local timezone
  ansible.builtin.shell: |
    set -o pipefail
    timedatectl | grep 'Time zone' | cut -d':' -f2 | cut -d' ' -f2
  register: controller_tz
  delegate_to: localhost
  when: timezone is undefined
  changed_when: false
  check_mode: false
  become: false
  args:
    executable: '/bin/bash'
  tags: [system, timezone]

- name: Set timezone on host
  community.general.timezone:
    name: "{{ timezone | default(controller_tz.stdout) }}"
  tags: [system, timezone]

- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ hostname | default(inventory_hostname) }}"
  tags: [system, hostname]

- name: Configure package repositories
  ansible.builtin.include_tasks: "{{ ansible_os_family | lower }}/repositories.yml"
  tags: [packages, repositories]

- name: Install base packages
  ansible.builtin.package:
    name: "{{ base_packages[ansible_os_family | lower]['other'] }}"
    state: present
  tags: [packages]

- name: Install virtualization packages
  ansible.builtin.package:
    name: "{{ vm_packages[ansible_virtualization_type | default('none')][ansible_os_family | lower]['other'] | default([]) }}"
    state: present
  when: ansible_virtualization_type is defined
  tags: [packages, virtualization]

- name: Install system update packages
  ansible.builtin.package:
    name: "{{ update_packages[ansible_os_family | lower]['other'] }}"
    state: present
  tags: [packages, updates]

- name: Configure SSH
  ansible.builtin.include_tasks: ssh.yml
  when: ssh.configure | bool
  tags: [ssh, security]

- name: Process users and groups
  ansible.builtin.include_role:
    name: ansibleguy.linux_users
  when: >
    (part is undefined or part|int == 1) and
    (BOOTSTRAP.configure_users | bool and
    ((system_auth.users is defined and system_auth.users | length > 0) or
    (system_auth.groups is defined and system_auth.groups | length > 0)))
  tags: [users, groups, auth]
  args:
    apply:
      tags: [users, groups, auth]

- name: Process distribution specific configurations
  ansible.builtin.include_tasks: "{{ ansible_os_family | lower }}/config.yml"
  tags: [system, config]
